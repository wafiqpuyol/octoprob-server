generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id
  username      String          @unique
  password      String?
  googleId      String?
  facebookId    String?
  email         String          @unique
  createdAt     DateTime        @default(now())
  Notifications Notifications[]
  Monitor       Monitor[]

  @@index([username, email])
}

model Notifications {
  id        Int      @id @default(autoincrement())
  userId    Int
  groupName String
  emails    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Monitor {
  id             Int       @id @default(autoincrement())
  userId         Int
  notificationId Int
  name           String
  active         Boolean   @default(true)
  status         Int?
  frequency      Int       @default(30)
  alertThreshold Int       @default(1)
  url            String
  type           String
  lastChanged    DateTime?
  timeout        Int       @default(10)
  uptime         Int       @default(0)
  redirects      Int       @default(0)
  method         String?
  headers        String?
  body           String?
  httpAuthMethod String?
  basicAuthUser  String?
  basicAuthPass  String?
  bearerToken    String?
  contentType    String?
  statusCode     String?
  responseTime   String?
  connection     String?
  port           Int?
  user           User      @relation(fields: [userId], references: [id])
  createdAt      DateTime  @default(now())

  @@index([userId])
}

model HttpHeartbeat {
  id           Int     @id @default(autoincrement())
  monitorId    Int
  status       Int
  code         Int     @default(0)
  message      String?
  timestamp    DateTime
  reqHeaders   String?
  resHeaders   String?
  reqBody      String?
  resBody      String?
  responseTime Int     @default(0)

  @@index([monitorId])
}

model MongoDBHeartbeat {
  id           Int     @id @default(autoincrement())
  monitorId    Int
  status       Int
  code         Int     @default(0)
  message      String?
  timestamp    DateTime
  responseTime Int     @default(0)
  connection   String?

  @@index([monitorId])
}

model RedisHeartbeat {
  id           Int     @id @default(autoincrement())
  monitorId    Int
  status       Int
  code         Int     @default(0)
  message      String?
  timestamp    DateTime
  responseTime Int     @default(0)
  connection   String?

  @@index([monitorId])
}

model TCPHeartbeat {
  id           Int     @id @default(autoincrement())
  monitorId    Int
  status       Int
  code         Int     @default(0)
  message      String?
  timestamp    DateTime
  responseTime Int     @default(0)
  connection   String?

  @@index([monitorId])
}

model SSLMonitor {
  id             Int      @id @default(autoincrement())
  notificationId Int
  userId         Int
  name           String
  status         Int
  active         Boolean  @default(true)
  frequency      Int      @default(30)
  alertThreshold Int      @default(1)
  url            String?
  info           String?
  createdAt      DateTime @default(now())

  @@index([userId])
}
